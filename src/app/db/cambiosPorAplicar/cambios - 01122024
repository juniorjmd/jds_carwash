
-- valida que estas agregandolo al recurso inventario
INSERT INTO `recurso` (`tipo_recurso`, `nombre_recurso`, `img`, `padreId`, `display_nombre`) VALUES ('5', 'cargarPorPlantilla', '<i class=\"bi bi-upload\"></i>', '19', 'Cargar Productos Por Plantilla');
insert into recurso_direcciones ( id_recurso, direccion) values( 84 , '/home/admin/inventarios') , ( 84 , 'inventario_por_plantilla') ;

CREATE 
    ALGORITHM = UNDEFINED 
    DEFINER = `jdpsoluc_jds`@`%` 
    SQL SECURITY DEFINER
VIEW `vw_inv_inventario_ingreso_aplicado` AS
    SELECT 
        `inv_inventario_ingreso_aplicado`.`id` AS `id`,
        `inv_inventario_ingreso_aplicado`.`cod_producto` AS `cod_producto`,
        `inv_inventario_ingreso_aplicado`.`cantidad` AS `cantidad`,
        `inv_inventario_ingreso_aplicado`.`idInventario` AS `idInventario`,
        `inv_inventario_ingreso_aplicado`.`referencia` AS `referencia`,
        `inv_inventario_ingreso_aplicado`.`usuario_creacion` AS `usuario_creacion`,
        `inv_inventario_ingreso_aplicado`.`usuario_edicion` AS `usuario_edicion`,
        `inv_inventario_ingreso_aplicado`.`fecha_creacion` AS `fecha_creacion`,
        `inv_inventario_ingreso_aplicado`.`fecha_actualizacion` AS `fecha_actualizacion`,
        `inv_inventario_ingreso_aplicado`.`estado` AS `estado`,
        `inv_inventario_ingreso_aplicado`.`cantidadAnterios` AS `cantidadAnterios`,
        `inv_inventario_ingreso_aplicado`.`cantidadAjuste` AS `cantidadAjuste`,
        `inv_mst_producto`.`nombre` AS `nombre`
    FROM
        (`inv_inventario_ingreso_aplicado`
        LEFT JOIN `inv_mst_producto` ON ((`inv_mst_producto`.`id` = `inv_inventario_ingreso_aplicado`.`cod_producto`)))


        CREATE TABLE `precargue_archivos` (
  `codigo` text NOT NULL,
  `categoria` varchar(45) DEFAULT NULL,
  `marca` varchar(45) DEFAULT NULL,
  `nombre` text,
  `referencia` varchar(50) DEFAULT NULL,
  `precioVenta` decimal(16,2) DEFAULT NULL,
  `precioCompra` decimal(16,2) DEFAULT NULL,
  `porcentajeIva` decimal(10,2) NOT NULL DEFAULT '0.00',
  `presentacion` varchar(100) NOT NULL DEFAULT '',
  `cantidad` decimal(16,2) DEFAULT NULL,
  `archivo` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


DROP TRIGGER IF EXISTS `auxiliar_Creacion_inicial_productos_AFTER_INSERT`;

DELIMITER $$ CREATE DEFINER=`jdpsoluc_jds`@`%` TRIGGER `auxiliar_Creacion_inicial_productos_AFTER_INSERT` AFTER INSERT ON `auxiliar_Creacion_inicial_productos` FOR EACH ROW BEGIN
   
    declare _idbodega , _idexistencia , _idMarca , _idCategoria, _idPresentacion , _cuentaCat , countLetra , pos , auxCont ,
            count_prd int ; 
    declare _letra text;
    declare _antes_de_iva ,_iva decimal(10,2);
    
    
     select count(0) into count_prd from inv_mst_producto where upper(id) = upper( new.codigo );
     select count(0) into _idCategoria from inv_categorias where upper(nombre) = upper( new.categoria );
    -- set _idCategoria = 0;
    
    if _idCategoria = 0 then
    SELECT par_id into _cuentaCat FROM parametros where cod_parametro = 'ID_CUENTA_INVENTARIO_CATEGORIA'; 
		set countLetra = 1 ; 
		set auxCont = 0;
		set pos = 0 ; 
		while countLetra > 0  do  
		   set pos = pos + 1 ; 
		   set _letra =  upper( substr( new.categoria , pos , 1  ));
		  
		   if auxCont > 0 then
			set  _letra = concat( auxCont ,  _letra ) ;
		   end if;
            if pos =  length( new.categoria ) then
			  set pos = 0;
			  set auxCont = auxCont + 1;
		   end if;
		   select count(0) into countLetra from inv_categorias where upper(letra) = _letra; 
		end while;  
		  insert into inv_categorias (nombre , idCuentaContable , idPadreCategoria, letra , descripcion , usuario_creacion ) values (new.categoria , _cuentaCat , 0 , _letra 
      ,concat('Categoria ' , new.categoria ) , 1 );
    end if;
     select count(0) into _idMarca from inv_marcas where upper(nombre) = upper( new.marca );
    
    if _idMarca = 0 then 
      insert into inv_marcas (nombre,  descripcion , usuario_creacion ) values(new.marca , concat('Marca ', new.marca ) , 1 );
    end if;
    
    select count(0) into _idPresentacion from inv_mst_producto_presentacion where upper(nombre) = upper( new.presentacion );
   
    if _idPresentacion = 0 then 
    -- id, nombre, descripcion, sigla
      insert into inv_mst_producto_presentacion (nombre, descripcion, sigla) values(new.presentacion , concat('Presentacion ', new.presentacion ) , 
      substr(new.presentacion , 1 , 3)
      );
    end if;
    
    select id into _idPresentacion from inv_mst_producto_presentacion where upper(nombre) = upper( new.presentacion );
    select id into _idMarca from inv_marcas where upper(nombre) = upper( new.marca ); 
    select id into   _idCategoria from inv_categorias where upper(nombre) = upper( new.categoria );
    set _antes_de_iva = new.precioVenta  / (1 + new.porcentajeIva ); 
    set  _iva = new.precioVenta - _antes_de_iva ;
    if count_prd = 0 then 
    insert into inv_mst_producto (
		id, usuario_creacion, 
		idCategoria, idMarca, nombre,
		  precioVenta, porcent_iva,
		  precioCompra, 
		  barcode, descripcion,
		  infoTributaria, presentacion
		  , cod_prd_externo ) values(  new.codigo, 1,_idCategoria, _idMarca , new.nombre , new.precioVenta , new.porcentajeIva , new.precioCompra ,
		   new.codigo, concat('producto ' ,  new.codigo) , case   when new.porcentajeIva > 0 then 'GRABADO' else 'EXENTO' end , _idPresentacion , 
			NEW.referencia 
		  ); 
  
   insert into inv_mst_producto_images (id_producto) values(new.codigo);
   insert into inv_mst_producto_precios (valor_iva,precio_antes_de_iva,precio_con_iva,usuario_creacion, id_producto ) values(
  _iva , _antes_de_iva , new.precioVenta  , 1 , new.codigo  ) ; 
  else 
     update inv_mst_producto set usuario_edicion = 1 , porcent_iva =  new.porcentajeIva,
		  precioCompra =  new.precioCompra ,  
		  infoTributaria = case   when new.porcentajeIva > 0 then 'GRABADO' else 'EXENTO' end , presentacion = _idPresentacion where  upper(id) = upper( new.codigo ); 
  end if ; 
  
  select min( id ) into _idbodega FROM inv_bodegas;
  select id into _idexistencia from inv_mst_producto_existencias  where 
    id_producto = new.codigo and  id_bodega = _idbodega ; 
   update inv_mst_producto_existencias 
    set cant_inicial = new.cantidad ,  cant_actual= new.cantidad 
    where id = _idexistencia ;  
END$$
DELIMITER ;
